# Docker Compose configuration with Docker Secrets support
# For enhanced security in local development
#
# Usage:
#   1. Create your secret file: echo "sk-ant-oat01-your-token" > .secrets/oauth_token.txt
#   2. Run with: docker compose -f docker-compose.secrets.yml up -d

services:
  typescript:
    image: ghcr.io/${GITHUB_ORG:-cabinlab}/${GITHUB_REPO:-claude-code-sdk-docker}:typescript
    container_name: claude-sdk-secure
    volumes:
      - claude-auth:/home/claude/.claude
      - ./:/app
    ports:
      - "${PORT:-3000}:3000"
    secrets:
      - oauth_token
    environment:
      # The entrypoint script will check for the secret file first
      CLAUDE_CODE_OAUTH_TOKEN_FILE: /run/secrets/oauth_token
    stdin_open: true
    tty: true

  python:
    image: ghcr.io/${GITHUB_ORG:-cabinlab}/${GITHUB_REPO:-claude-code-sdk-docker}:python
    container_name: claude-sdk-python-secure
    volumes:
      - claude-auth-python:/home/claude/.claude
      - ./:/app
    ports:
      - "${PORT:-3000}:3000"
    secrets:
      - oauth_token
    environment:
      CLAUDE_CODE_OAUTH_TOKEN_FILE: /run/secrets/oauth_token
    stdin_open: true
    tty: true

# Define secrets (file-based for local development)
secrets:
  oauth_token:
    file: .secrets/oauth_token.txt

# Named volumes for persistent authentication
volumes:
  claude-auth:
  claude-auth-python: