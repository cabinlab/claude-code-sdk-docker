# Base image with Node.js and Claude Code CLI
FROM node:22-slim AS claude-base

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    curl \
    jq \
    ca-certificates \
    nano \
    && rm -rf /var/lib/apt/lists/*

# Install Claude Code CLI and tsx globally (includes TypeScript SDK)
RUN npm install -g @anthropic-ai/claude-code tsx

# Set NODE_PATH to include global modules
ENV NODE_PATH=/usr/local/lib/node_modules

# Create non-root user
RUN useradd -m -s /bin/bash claude

# Create directory for Claude auth and configuration
RUN mkdir -p /home/claude/.claude && \
    chmod 755 /home/claude/.claude && \
    chown -R claude:claude /home/claude/.claude

# Set up .claude configuration scaffolding
RUN mkdir -p /home/claude/.claude/commands /home/claude/.claude/hooks && \
    chown -R claude:claude /home/claude/.claude

# Copy Claude configuration scaffolding
COPY --chown=claude:claude .claude/ /home/claude/.claude/

# Copy examples and scripts
COPY --chown=claude:claude examples/ /app/examples/
COPY --chown=claude:claude scripts/ /app/scripts/

# Copy entrypoint script (as root)
COPY scripts/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Set working directory
WORKDIR /app
RUN chown claude:claude /app

# Switch to non-root user
USER claude

# Expose port (configurable via PORT env var, default 3000)
ARG PORT=3000
ENV PORT=${PORT}
EXPOSE ${PORT}

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]

# Default command
CMD ["sleep", "infinity"]